{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"p\", null, \"Father\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SmallComp = _resolveComponent(\"SmallComp\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.message = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.message]]), _createElementVNode(\"p\", null, _toDisplayString(_ctx.message), 1 /* TEXT */), _createVNode(_component_SmallComp, {\n    message: $data.messages\n  }, null, 8 /* PROPS */, [\"message\"]), _createVNode(_component_SmallComp, {\n    as: `message`\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACEA,oBAAwB,2BAAnBA,oBAAa,WAAV,QAAM;;;;6DAAdC,UAAwB,kBACxBD,oBAAuC;IAAhCE,IAAI,EAAC,MAAM;+DAAUC,YAAO;iDAAPA,YAAO,KACnCH,oBAAoB,4BAAdG,YAAO,kBACbC,aAA4CC;IAAhCC,OAAO,EAAEC;EAAQ,sCAC7BH,aAAuCC;IAA3BG,EAAE,EAAE;EAAS","names":["_createElementVNode","_hoisted_1","type","_ctx","_createVNode","_component_SmallComp","message","$data","as"],"sourceRoot":"","sources":["/home/prism/Documents/todoapp/src/components/BigComp.vue"],"sourcesContent":["<template>\n  <div><p>Father</p></div>\n  <input type=\"text\" v-model=\"message\" />\n  <p>{{ message }}</p>\n  <SmallComp :message=\"messages\"> </SmallComp>\n  <SmallComp :as=\"`message`\"></SmallComp>\n</template>\n<script>\nimport SmallComp from \"./SmallComp.vue\";\nexport default {\n  name: \"father-component\",\n  components: {\n    SmallComp,\n  },\n  data() {\n    return {\n      messages: \"\",\n      as:'' \n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}