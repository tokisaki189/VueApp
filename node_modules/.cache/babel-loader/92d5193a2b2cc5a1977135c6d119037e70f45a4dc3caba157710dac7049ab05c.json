{"ast":null,"code":"import { withKeys as _withKeys, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b86bd7b0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"todo-input\",\n    type: \"text\",\n    onKeyup: _cache[0] || (_cache[0] = _withKeys((...args) => $setup.logout && $setup.logout(...args), [\"enter\"])),\n    placeholder: \"something\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.input = $event)\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $setup.input]])]), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.todos, todo => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: todo.id\n    }, [_createElementVNode(\"span\", null, _toDisplayString(todo.text), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.remove(todo.id)\n    }, \"X\", 8 /* PROPS */, _hoisted_1)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, _toDisplayString($setup.input), 1 /* TEXT */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;6DACEA,oBAQM,8BAPFA,oBAME;IALAC,KAAK,EAAC,YAAY;IAClBC,IAAI,EAAC,MAAM;IACVC,OAAK,mDAAQC,uCAAM;IACpBC,WAAW,EAAC,WAAW;+DACdD,YAAK;iEAALA,YAAK,OAGpBJ,oBAKM,iCAJJM,oBAGOC,6BAHYC,UAAK,EAAbC,IAAI;yBAAfH,oBAGO;MAHoBI,GAAG,EAAED,IAAI,CAACE;QACnCX,oBAA4B,+BAAnBS,IAAI,CAACG,IAAI,kBAClBZ,oBAA2C;MAAlCa,OAAK,YAAEL,WAAM,CAACC,IAAI,CAACE,EAAE;OAAG,GAAC;oCAGtCX,oBAEM,cADJA,oBAAkB,4BAAZI,YAAK","names":["_createElementVNode","class","type","onKeyup","$setup","placeholder","_createElementBlock","_Fragment","_ctx","todo","key","id","text","onClick"],"sourceRoot":"","sources":["/home/prism/Documents/VueApp/src/components/todoAppVue3.vue"],"sourcesContent":["<template>\n  <div>\n      <input\n        class=\"todo-input\"\n        type=\"text\"\n        @keyup.enter=\"logout\"\n        placeholder=\"something\"\n        v-model=\"input\"\n      />\n  </div>\n  <div>\n    <li v-for=\"todo in todos\" :key=\"todo.id\">\n      <span>{{ todo.text }}</span>\n      <button @click=\"remove(todo.id)\">X</button>\n      </li>\n  </div>\n  <div>\n    <p>{{ input }}</p>\n  </div>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nexport default {\n  setup() {\n    let input = ref(\"\");\n    let todos = ref([]);\n    function logout() {\n      console.log(input.value);\n    }\n\n\n\n    return {\n      input,\n      logout,\n    };\n  },\n};\n</script>\n<style scoped>\n.todo-input {\n  margin-top: 10rem;\n  height: 3rem;\n  width: 20rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}