{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"p\", null, \"Father\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SmallComp = _resolveComponent(\"SmallComp\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createCommentVNode(\" <input type=\\\"text\\\" v-model=\\\"message\\\" />\\n  <p>{{ message }}</p>\\n  <SmallComp :messages=\\\"message\\\"> </SmallComp>\\n  <SmallComp :as=\\\"`message`\\\"></SmallComp> \"), _createCommentVNode(\" <SmallComp @someEvent=\\\"logthat\\\"></SmallComp> \"), _createVNode(_component_SmallComp, {\n    onEmitDec: _ctx.logDec\n  }, null, 8 /* PROPS */, [\"onEmitDec\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACEA,oBAAwB,2BAAnBA,oBAAa,WAAV,QAAM;;;;6DAAdC,UAAwB,EACxBC,2LAG2C,EAE3CA,uEAAqD,EACrDC,aAAyCC;IAA7BC,SAAO,EAAEC;EAAM","names":["_createElementVNode","_hoisted_1","_createCommentVNode","_createVNode","_component_SmallComp","onEmitDec","_ctx"],"sourceRoot":"","sources":["/home/prism/Documents/todoapp/src/components/BigComp.vue"],"sourcesContent":["<template>\n  <div><p>Father</p></div>\n  <!-- <input type=\"text\" v-model=\"message\" />\n  <p>{{ message }}</p>\n  <SmallComp :messages=\"message\"> </SmallComp>\n  <SmallComp :as=\"`message`\"></SmallComp> -->\n\n  <!-- <SmallComp @someEvent=\"logthat\"></SmallComp> -->\n  <SmallComp @emitDec=\"logDec\"></SmallComp>\n</template>\n<script>\nimport SmallComp from \"./SmallComp.vue\";\nexport default {\n  name: \"father-component\",\n  components: {\n    SmallComp,\n  },\n  data() {\n    return {\n      message: \"\",\n      messages: \"\",\n      as: \"\",\n    };\n  },\n  methods: {\n    logthis(){\n      console.log(\"logthis\");\n    },\n    logthat() {\n      this.logthis();\n      console.log(\"da log\");\n    },\n    log() {\n      console.log(\"emitDec\");\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}