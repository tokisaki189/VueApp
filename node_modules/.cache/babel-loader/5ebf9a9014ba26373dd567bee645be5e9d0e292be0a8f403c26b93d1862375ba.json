{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\");\n}","map":{"version":3,"mappings":";;uBACEA,oBAAW","names":["_createElementBlock"],"sourceRoot":"","sources":["/home/prism/Documents/todoapp/src/components/watcherTest.vue"],"sourcesContent":["<template>\n  <div></div>\n</template>\n<script>\nexport default {\n    name: \"watcher-test\"m\n data() {\n    return {\n      question: '',\n      answer: 'Questions usually contain a question mark. ;-)'\n    }\n  },\n  watch: {\n    // whenever question changes, this function will run\n    question(newQuestion, oldQuestion) {\n      if (newQuestion.includes('?')) {\n        this.getAnswer()\n      }\n    }\n  },\n  methods: {\n    async getAnswer() {\n      this.answer = 'Thinking...'\n      try {\n        const res = await fetch('https://yesno.wtf/api')\n        this.answer = (await res.json()).answer\n      } catch (error) {\n        this.answer = 'Error! Could not reach the API. ' + error\n      }\n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}