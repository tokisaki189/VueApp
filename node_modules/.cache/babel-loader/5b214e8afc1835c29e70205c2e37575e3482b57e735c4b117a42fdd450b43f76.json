{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, \"Son\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createCommentVNode(\" <p> {{ messages }}</p>\\n<p> {{as}} </p> \"), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('someEvent'))\n  }, \"click me\")], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACAA,oBAAc,aAAT,KAAG;;;6DAARC,UAAc,EACdC,gEACmB,EACnBF,oBAAqD;IAA5CG,OAAK,sCAAEC,UAAK;KAAe,UAAQ","names":["_createElementVNode","_hoisted_1","_createCommentVNode","onClick","_ctx"],"sourceRoot":"","sources":["/home/prism/Documents/todoapp/src/components/SmallComp.vue"],"sourcesContent":["<template>\n<div>Son</div>\n<!-- <p> {{ messages }}</p>\n<p> {{as}} </p> -->\n<button @click=\"$emit('someEvent')\">click me</button>\n</template>\n<script>\nexport default {\n  name: \"son-component\",\n  props:{\n    messages: String,\n    as: String\n  },\n  methods: {\n    submit() {\n      this.$emit\n  }\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}