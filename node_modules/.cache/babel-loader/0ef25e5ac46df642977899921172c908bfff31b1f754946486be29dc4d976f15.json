{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"p\", null, [_createTextVNode(\" Ask a yes/no question: \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.question = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.question]])]), _createElementVNode(\"p\", null, _toDisplayString(_ctx.answer), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;6DACEA,oBAGI,6BAHD,0BAED,uCAA4B;+DAAZC,aAAQ;iDAARA,aAAQ,OAE1BD,oBAAmB,4BAAbC,WAAM","names":["_createElementVNode","_ctx"],"sourceRoot":"","sources":["/home/prism/Documents/todoapp/src/components/watcherTest.vue"],"sourcesContent":["<template>\n  <p>\n    Ask a yes/no question:\n    <input v-model=\"question\" />\n  </p>\n  <p>{{ answer }}</p>\n</template>\n<script>\nexport default {\n  name: \"watcher-test\",\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}