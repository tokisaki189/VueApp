{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, \"Son\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Submit\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createCommentVNode(\" <p> {{ messages }}</p>\\n<p> {{as}} </p> \"), _createCommentVNode(\"  <button @click=\\\"$emit('someEvent')\\\">click me</button> \"), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.bindEmit && $options.bindEmit(...args))\n  }, \"click emit\"), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.emitform && $options.emitform(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.mess = $event),\n    type: \"text\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.mess]]), _hoisted_2], 32 /* HYDRATE_EVENTS */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACEA,oBAAc,aAAT,KAAG;gCAONA,oBAAqC;EAA7BC,IAAI,EAAC;AAAQ,GAAC,QAAM;;;6DAP9BC,UAAc,EACdC,gEACiB,EACjBA,iFAA+D,EAC/DH,oBAA6C;IAApCI,OAAK,yCAAEC,+CAAQ;KAAE,YAAU,GACpCL,oBAGO;IAHAM,QAAM,wDAAUD,+CAAQ;sBAC7BL,oBAAoC;+DAApBO,UAAI;IAAEN,IAAI,EAAC;iDAAXM,UAAI,KACpBC,UAAqC","names":["_createElementVNode","type","_hoisted_1","_createCommentVNode","onClick","$options","onSubmit","$data","_hoisted_2"],"sourceRoot":"","sources":["/home/luna/Documents/VueApp/src/components/SmallComp.vue"],"sourcesContent":["<template>\n  <div>Son</div>\n  <!-- <p> {{ messages }}</p>\n<p> {{as}} </p> -->\n  <!--  <button @click=\"$emit('someEvent')\">click me</button> -->\n  <button @click=\"bindEmit\">click emit</button>\n  <form @submit.prevent=\"emitform\">\n    <input v-model=\"mess\" type=\"text\" />\n    <button type=\"submit\">Submit</button>\n  </form>\n</template>\n<script>\nexport default {\n  name: \"son-component\",\n  data() {\n    return {\n      mess: \"\",\n    };\n  },\n  props: {\n    messages: String,\n    as: String,\n  },\n  methods: {\n    emitform() {\n      this.$emit(\"formevent\", this.mess);\n    },\n    submit() {\n      this.$emit(\"someEvent\");\n    },\n    bindEmit() {\n      this.$emit(\"emitDec\");\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}