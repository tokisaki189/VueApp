{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, KeepAlive as _KeepAlive } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"button-container\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  class: \"component-container\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tabs, tab => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      class: \"tab-menu\",\n      key: tab,\n      onClick: $event => (_ctx.selected = tab, _ctx.changeColor())\n    }, _toDisplayString(tab), 9 /* TEXT, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(), _createBlock(_KeepAlive, null, [(_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.selected)))], 1024 /* DYNAMIC_SLOTS */))])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAkB;;;EAKxBA,KAAK,EAAC;AAAqB;;uBANlCC,oBAWM,OAXNC,UAWM,GAVJC,oBAIM,OAJNC,UAIM,sBAHNH,oBAESI,6BAF8BC,SAAI,EAAXC,GAAG;yBAAnCN,oBAES;MAFDD,KAAK,EAAC,UAAU;MAAsBQ,GAAG,EAAED,GAAG;MAAGE,OAAK,aAAEH,aAAQ,GAAGC,GAAG,EAAED,gBAAW;wBACtFC,GAAG;oCAGRJ,oBAIM,OAJNO,UAIM,kBAHJC,aAEYC,kCADVD,aAAsCE,yBAAtBP,aAAQ","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_ctx","tab","key","onClick","_hoisted_4","_createBlock","_KeepAlive","_resolveDynamicComponent"],"sourceRoot":"","sources":["/home/prism/Documents/todoapp/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"button-container\">\n    <button class=\"tab-menu\" v-for=\"tab in tabs\" :key=\"tab\" @click=\"selected = tab, changeColor()\">\n      {{ tab }}\n    </button>\n    </div>\n    <div class=\"component-container\">\n      <KeepAlive>\n        <component :is=\"selected\"></component>\n      </KeepAlive>\n    </div>\n  </div>\n</template>\n\n<script>\nimport notes from \"./components/notes.vue\";\nimport Typo from \"./components/Typo.vue\";\nimport BigComp from \"./components/BigComp.vue\";\n/* import FormSection from './components/FormSection.vue' */\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      tabs: [\"notes\", \"Typo\", \"BigComp\"],\n      selected: \"notes\",\n    };\n  },\n  components: {\n    notes,\n    Typo,\n    BigComp,\n    /* FormSection */\n  },\n  methods: {\n    changeColor(){\n\n    }\n};\n\n</script>\n\n<style>\nbody{\n  background-color: #2c3e50;\n}\n*{\n  margin: 0;\n  padding: auto;\n}\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n.container {\n  display: flex;\n}\n.button-container {\n  display: flex;\n  flex-direction: column;\n  height: 55rem;\n  background-color: rgb(90, 255, 142);;\n  width: 100px;\n}\n.component-container {\n  width: 80%;\n  background-color: red;\n}\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.5s ease-in;\n}\n.tab-menu{\n  font-size: larger;\n  margin: top 2rem;\n  margin-bottom: 2rem;\n}\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}