{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  mounted() {\n    console.log(\"mounted\");\n    axios.get(\"http://localhost:3000/notes\").then(response => {\n      console.log(response.data);\n      this.responseData = response.data;\n    }).catch(error => {\n      console.error(error);\n    });\n  },\n  name: \"note-section\",\n  data() {\n    return {\n      newid: 0,\n      newtitle: \"\",\n      newcontent: \"\",\n      searchText: \"\",\n      allnotes: [{\n        id: 1,\n        title: \"phenomenon\",\n        content: \"a term describe something unsual that occur\"\n      }, {\n        id: 2,\n        title: \"incendiary\",\n        content: \"something is on fire\"\n      }, {\n        id: 3,\n        title: \"hedonism\",\n        content: \"I'm not lazy, I'm just prefer enjoying life\"\n      }, {\n        id: 4,\n        title: \"ephemeral\",\n        content: \"not for long, only temporary\"\n      }, {\n        id: 5,\n        title: \"fabricated\",\n        content: \"some miserable gossip is delivered\"\n      }, {\n        id: 6,\n        title: \"innuedo\",\n        content: \"alluding, implying to someone without letting them know\"\n      }, {\n        id: 7,\n        title: \"solitude\",\n        content: \"the state of being isolated, alone\"\n      }]\n    };\n  },\n  methods: {\n    addNote() {\n      console.log(this.allnotes);\n      let newNote = {\n        id: this.newid,\n        title: this.newtitle,\n        content: this.newcontent\n      };\n      this.allnotes.push(newNote);\n    },\n    deleteNote(id) {\n      console.log(\"deleted\" + id);\n      delete this.allnotes[id - 1];\n    }\n  },\n  computed: {\n    filteredNotes() {\n      return this.allnotes.filter(note => {\n        return note.title.toLowerCase().includes(this.searchText.toLowerCase()) || note.content.toLowerCase().includes(this.searchText.toLowerCase());\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAuBA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,OAAO,GAAE;IACPC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxBH,KAAI,CACDI,GAAG,CAAC,6BAA6B,EACjCC,IAAI,CAAEC,QAAQ,IAAK;MAClBJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAACC,IAAI,CAAC;MAC1B,IAAI,CAACC,YAAW,GAAIF,QAAQ,CAACC,IAAI;IACnC,CAAC,EACAE,KAAK,CAAEC,KAAK,IAAK;MAChBR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC;EACCC,IAAI,EAAE,cAAc;EACpBJ,IAAI,GAAG;IACL,OAAO;MACLK,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,CACR;QACEC,EAAE,EAAE,CAAC;QACLC,KAAK,EAAE,YAAY;QACnBC,OAAO,EAAE;MACX,CAAC,EACD;QAAEF,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,YAAY;QAAEC,OAAO,EAAE;MAAuB,CAAC,EAC/D;QACEF,EAAE,EAAE,CAAC;QACLC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,EACD;QAAEF,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,WAAW;QAAEC,OAAO,EAAE;MAA+B,CAAC,EACtE;QACEF,EAAE,EAAE,CAAC;QACLC,KAAK,EAAE,YAAY;QACnBC,OAAO,EAAE;MACX,CAAC,EACD;QACEF,EAAE,EAAE,CAAC;QACLC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE;MACX,CAAC,EACD;QACEF,EAAE,EAAE,CAAC;QACLC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC;IAEL,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,OAAO,GAAG;MACRnB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACa,QAAQ,CAAC;MAC1B,IAAIM,OAAM,GAAI;QACZL,EAAE,EAAE,IAAI,CAACL,KAAK;QACdM,KAAK,EAAE,IAAI,CAACL,QAAQ;QACpBM,OAAO,EAAE,IAAI,CAACL;MAChB,CAAC;MACD,IAAI,CAACE,QAAQ,CAACO,IAAI,CAACD,OAAO,CAAC;IAC7B,CAAC;IACDE,UAAU,CAACP,EAAE,EAAE;MACbf,OAAO,CAACC,GAAG,CAAC,SAAQ,GAAIc,EAAE,CAAC;MAC3B,OAAO,IAAI,CAACD,QAAQ,CAACC,EAAC,GAAI,CAAC,CAAC;IAC9B;EACF,CAAC;EACDQ,QAAQ,EAAE;IACRC,aAAa,GAAG;MACd,OAAO,IAAI,CAACV,QAAQ,CAACW,MAAM,CAAEC,IAAI,IAAK;QACpC,OACEA,IAAI,CAACV,KAAK,CAACW,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACf,UAAU,CAACc,WAAW,EAAE,KAC/DD,IAAI,CAACT,OAAO,CAACU,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACf,UAAU,CAACc,WAAW,EAAE;MAErE,CAAC,CAAC;IACJ;EACF;AACF,CAAC","names":["axios","mounted","console","log","get","then","response","data","responseData","catch","error","name","newid","newtitle","newcontent","searchText","allnotes","id","title","content","methods","addNote","newNote","push","deleteNote","computed","filteredNotes","filter","note","toLowerCase","includes"],"sourceRoot":"","sources":["/home/prism/Documents/todoapp/src/components/notes.vue"],"sourcesContent":["<template>\n  <div>\n    <p>Add here</p>\n    <form @submit.prevent=\"addNote\" class=\"form-section\">\n      <input placeholder=\"ID\" type=\"number\" v-model=\"newid\" />\n      <input placeholder=\"title\" type=\"text\" v-model=\"newtitle\" />\n      <textarea placeholder=\"content\" v-model=\"newcontent\"></textarea>\n      <button type=\"submit\" @click=\"resetForm\">Add</button>\n    </form>\n\n    <input type=\"text\" v-model=\"searchText\" placeholder=\"Search\" class=\"search-box\" />\n\n    <div class=\"note-container\">\n      <div v-for=\"note in filteredNotes\" :key=\"note\" class=\"notes\" v-bind:id=\"note.id\">\n        <p>{{ note.id }}</p>\n        <p>{{ note.title }}</p>\n        <p>{{ note.content }}</p>\n        <button v-bind:id=\"note.id\" @click=\"deleteNote(note.id)\">Delete</button>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nexport default {\n  mounted(){\n    console.log(\"mounted\");\n  axios\n    .get(\"http://localhost:3000/notes\")\n    .then((response) => {\n      console.log(response.data);\n      this.responseData = response.data;\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n},\n  name: \"note-section\",\n  data() {\n    return {\n      newid: 0,\n      newtitle: \"\",\n      newcontent: \"\",\n      searchText: \"\",\n      allnotes: [\n        {\n          id: 1,\n          title: \"phenomenon\",\n          content: \"a term describe something unsual that occur\",\n        },\n        { id: 2, title: \"incendiary\", content: \"something is on fire\" },\n        {\n          id: 3,\n          title: \"hedonism\",\n          content: \"I'm not lazy, I'm just prefer enjoying life\",\n        },\n        { id: 4, title: \"ephemeral\", content: \"not for long, only temporary\" },\n        {\n          id: 5,\n          title: \"fabricated\",\n          content: \"some miserable gossip is delivered\",\n        },\n        {\n          id: 6,\n          title: \"innuedo\",\n          content: \"alluding, implying to someone without letting them know\",\n        },\n        {\n          id: 7,\n          title: \"solitude\",\n          content: \"the state of being isolated, alone\",\n        },\n      ],\n    };\n  },\n  methods: {\n    addNote() {\n      console.log(this.allnotes);\n      let newNote = {\n        id: this.newid,\n        title: this.newtitle,\n        content: this.newcontent,\n      };\n      this.allnotes.push(newNote);\n    },\n    deleteNote(id) {\n      console.log(\"deleted\" + id);\n      delete this.allnotes[id - 1];\n    },\n  },\n  computed: {\n    filteredNotes() {\n      return this.allnotes.filter((note) => {\n        return (\n          note.title.toLowerCase().includes(this.searchText.toLowerCase()) ||\n          note.content.toLowerCase().includes(this.searchText.toLowerCase())\n        );\n      });\n    },\n  },\n};\n</script>\n<style>\n.note-container {\n  display: flex;\n  gap: 2rem;\n  width: 80%;\n  margin: auto;\n  padding: auto;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.notes {\n  background-color: rgb(90, 255, 142);\n  width: 10rem;\n  height: 12rem;\n}\n\n.form-section {\n  margin: auto;\n  padding: auto;\n  width: 20%;\n  margin-bottom: 1rem;\n  display: flex;\n  flex-direction: column;\n}\n\n.form-section * {\n  border-radius: 2rem;\n  border: none;\n  padding: 0.5rem;\n  margin-bottom: 0.5rem;\n  height: 2rem;\n}\n\n.search-box {\n  border-radius: 2rem;\n  border: none;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  height: 1.5rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}