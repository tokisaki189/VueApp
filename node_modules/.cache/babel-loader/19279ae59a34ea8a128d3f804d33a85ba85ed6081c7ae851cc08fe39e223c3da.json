{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Add here\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"note-container\"\n};\nconst _hoisted_3 = [\"id\"];\nconst _hoisted_4 = [\"id\", \"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.addNote && $options.addNote(...args), [\"prevent\"])),\n    class: \"form-section\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    placeholder: \"ID\",\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newid = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newid]]), _withDirectives(_createElementVNode(\"input\", {\n    placeholder: \"title\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newtitle = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newtitle]]), _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"tinymce\",\n    placeholder: \"content\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newcontent = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newcontent]]), _createElementVNode(\"button\", {\n    type: \"submit\",\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.resetForm && _ctx.resetForm(...args))\n  }, \"Add\")], 32 /* HYDRATE_EVENTS */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.searchText = $event),\n    placeholder: \"Search\",\n    class: \"search-box\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchText]]), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredNotes, note => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: note,\n      class: \"notes\",\n      id: note.id\n    }, [_createElementVNode(\"p\", null, _toDisplayString(note.id), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(note.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(note.content), 1 /* TEXT */), _createElementVNode(\"button\", {\n      id: note.id,\n      onClick: $event => $options.deleteNote(note.id)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_4)], 8 /* PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"mappings":";gCAIIA,oBAAe,WAAZ,UAAQ;;EAmBNC,KAAK,EAAC;AAAgB;;;;uBApB7BC,oBAiCM,cAhCJC,UAAe,EACfH,oBASO;IATAI,QAAM,wDAAUC,6CAAO;IAAEJ,KAAK,EAAC;sBACpCD,oBAAwD;IAAjDM,WAAW,EAAC,IAAI;IAACC,IAAI,EAAC,QAAQ;+DAAUC,WAAK;iDAALA,WAAK,qBACpDR,oBAA4D;IAArDM,WAAW,EAAC,OAAO;IAACC,IAAI,EAAC,MAAM;+DAAUC,cAAQ;iDAARA,cAAQ,qBACxDR,oBAIY;IAHVC,KAAK,EAAC,SAAS;IACfK,WAAW,EAAC,SAAS;+DACZE,gBAAU;iDAAVA,gBAAU,KAErBR,oBAAqD;IAA7CO,IAAI,EAAC,QAAQ;IAAEE,OAAK,yCAAEC,yCAAS;KAAE,KAAG,8CAG9CV,oBAKE;IAJAO,IAAI,EAAC,MAAM;+DACFC,gBAAU;IACnBF,WAAW,EAAC,QAAQ;IACpBL,KAAK,EAAC;iDAFGO,gBAAU,KAKrBR,oBAYM,OAZNW,UAYM,sBAXJT,oBAUMU,6BATWP,sBAAa,EAArBQ,IAAI;yBADbX,oBAUM;MARHY,GAAG,EAAED,IAAI;MACVZ,KAAK,EAAC,OAAO;MACNc,EAAE,EAAEF,IAAI,CAACE;QAEhBf,oBAAoB,4BAAda,IAAI,CAACE,EAAE,kBACbf,oBAAuB,4BAAjBa,IAAI,CAACG,KAAK,kBAChBhB,oBAAyB,4BAAnBa,IAAI,CAACI,OAAO,kBAClBjB,oBAAwE;MAAzDe,EAAE,EAAEF,IAAI,CAACE,EAAE;MAAGN,OAAK,YAAEJ,mBAAU,CAACQ,IAAI,CAACE,EAAE;OAAG,QAAM","names":["_createElementVNode","class","_createElementBlock","_hoisted_1","onSubmit","$options","placeholder","type","$data","onClick","_ctx","_hoisted_2","_Fragment","note","key","id","title","content"],"sourceRoot":"","sources":["/home/prism/Documents/todoapp/src/components/notes.vue"],"sourcesContent":["<script>\n</script>\n<template>\n  <div>\n    <p>Add here</p>\n    <form @submit.prevent=\"addNote\" class=\"form-section\">\n      <input placeholder=\"ID\" type=\"number\" v-model=\"newid\" />\n      <input placeholder=\"title\" type=\"text\" v-model=\"newtitle\" />\n      <textarea\n        class=\"tinymce\"\n        placeholder=\"content\"\n        v-model=\"newcontent\"\n      ></textarea>\n      <button type=\"submit\" @click=\"resetForm\">Add</button>\n    </form>\n\n    <input\n      type=\"text\"\n      v-model=\"searchText\"\n      placeholder=\"Search\"\n      class=\"search-box\"\n    />\n\n    <div class=\"note-container\">\n      <div\n        v-for=\"note in filteredNotes\"\n        :key=\"note\"\n        class=\"notes\"\n        v-bind:id=\"note.id\"\n      >\n        <p>{{ note.id }}</p>\n        <p>{{ note.title }}</p>\n        <p>{{ note.content }}</p>\n        <button v-bind:id=\"note.id\" @click=\"deleteNote(note.id)\">Delete</button>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n\nexport default {\n  name: \"note-section\",\n\n  data() {\n    return {\n      newid: 0,\n      newtitle: \"\",\n      newcontent: \"\",\n      searchText: \"\",\n      allnotes: [\n        {\n          id: 1,\n          title: \"phenomenon\",\n          content: \"a term describe something unsual that occur\",\n        },\n        { id: 2, title: \"incendiary\", content: \"something is on fire\" },\n        {\n          id: 3,\n          title: \"hedonism\",\n          content: \"I'm not lazy, I'm just prefer enjoying life\",\n        },\n        { id: 4, title: \"ephemeral\", content: \"not for long, only temporary\" },\n        {\n          id: 5,\n          title: \"fabricated\",\n          content: \"some miserable gossip is delivered\",\n        },\n        {\n          id: 6,\n          title: \"innuedo\",\n          content: \"alluding, implying to someone without letting them know\",\n        },\n        {\n          id: 7,\n          title: \"solitude\",\n          content: \"the state of being isolated, alone\",\n        },\n      ],\n    };\n  },\n  methods: {\n    addNote() {\n      console.log(this.allnotes);\n      let newNote = {\n        id: this.newid,\n        title: this.newtitle,\n        content: this.newcontent,\n      };\n      this.allnotes.push(newNote);\n    },\n    deleteNote(id) {\n      console.log(\"deleted\" + id);\n      delete this.allnotes[id - 1];\n    },\n  },\n  computed: {\n    filteredNotes() {\n      return this.allnotes.filter((note) => {\n        return (\n          note.title.toLowerCase().includes(this.searchText.toLowerCase()) ||\n          note.content.toLowerCase().includes(this.searchText.toLowerCase())\n        );\n      });\n    },\n  },\n};\n</script>\n<style>\n.note-container {\n  display: flex;\n  gap: 2rem;\n  width: 80%;\n  margin: auto;\n  padding: auto;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.notes {\n  background-color: rgb(90, 255, 142);\n  width: 10rem;\n  height: 12rem;\n}\n\n.form-section {\n  margin: auto;\n  padding: auto;\n  width: 20%;\n  margin-bottom: 1rem;\n  display: flex;\n  flex-direction: column;\n}\n\n.form-section * {\n  border-radius: 2rem;\n  border: none;\n  padding: 0.5rem;\n  margin-bottom: 0.5rem;\n  height: 2rem;\n}\n\n.search-box {\n  border-radius: 2rem;\n  border: none;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  height: 1.5rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}