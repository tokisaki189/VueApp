{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"log-name\"\n};\nconst _hoisted_2 = {\n  class: \"chat-container\"\n};\nconst _hoisted_3 = {\n  class: \"chat-tex\"\n};\nconst _hoisted_4 = {\n  class: \"chat-section\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"p\", _hoisted_1, \"Logged in as: \" + _toDisplayString($props.username), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, msg => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: msg,\n      class: \"each-message\"\n    }, [_createElementVNode(\"span\", null, _toDisplayString(msg.username) + \": \", 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(msg.message), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.message = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"])),\n    class: \"message-box\",\n    type: \"text\",\n    name: \"\",\n    id: \"box\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.message]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.sendMessage && $options.sendMessage(...args)),\n    class: \"send-text\"\n  }, \"Send\")])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EACKA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAU;;EAQhBA,KAAK,EAAC;AAAc;;6DAV3BC,oBAAoD,KAApDC,UAAoD,EAAhC,gBAAc,oBAAGC,eAAQ,kBAC7CF,oBAoBM,OApBNG,UAoBM,GAnBJH,oBAOM,OAPNI,UAOM,GANNJ,oBAKK,gCAJHK,oBAGKC,6BAHaC,cAAQ,EAAfC,GAAG;yBAAdH,oBAGK;MAHwBI,GAAG,EAAED,GAAG;MAAET,KAAK,EAAC;QAC3CC,oBAAiC,+BAAxBQ,GAAG,CAACE,QAAQ,IAAG,IAAE,iBAC1BV,oBAA8B,+BAArBQ,GAAG,CAACG,OAAO;sCAIxBX,oBAUM,OAVNY,UAUM,mBATJZ,oBAOE;+DANSO,aAAO;IACfM,OAAK,mDAAQC,qDAAW;IACzBf,KAAK,EAAC,aAAa;IACnBgB,IAAI,EAAC,MAAM;IACXC,IAAI,EAAC,EAAE;IACPC,EAAE,EAAC;iEALMV,aAAO,KAOlBP,oBAA4D;IAAnDkB,OAAK,yCAAEJ,qDAAW;IAAEf,KAAK,EAAC;KAAY,MAAI","names":["class","_createElementVNode","_hoisted_1","$props","_hoisted_2","_hoisted_3","_createElementBlock","_Fragment","$data","msg","key","username","message","_hoisted_4","onKeyup","$options","type","name","id","onClick"],"sourceRoot":"","sources":["/home/prism/Documents/VueApp/src/components/ChatBox.vue"],"sourcesContent":["<template>\n  <p class=\"log-name\">Logged in as: {{ username }}</p>\n  <div class=\"chat-container\">\n    <div class=\"chat-tex\">\n    <ul>\n      <li v-for=\"msg in messages\" :key=\"msg\" class=\"each-message\">\n        <span>{{ msg.username }}: </span>\n        <span>{{ msg.message }}</span>\n      </li>\n    </ul>\n    </div>\n    <div class=\"chat-section\">\n      <input\n        v-model=\"message\"\n        @keyup.enter=\"sendMessage\"\n        class=\"message-box\"\n        type=\"text\"\n        name=\"\"\n        id=\"box\"\n      />\n      <button @click=\"sendMessage\" class=\"send-text\">Send</button>\n    </div>\n  </div>\n</template>\n<script>\nimport { database, ref, push, onValue } from \"../firebase\";\nexport default {\n  props: [\"username\"],\n  data() {\n    return {\n      message: \"\",\n      messages: [\n        {\n          message: \"hello\",\n        },\n        {\n          message: \"world\",\n        },\n        {\n          message: \"something\",\n        },\n      ],\n    };\n  },\n  mounted() {\n    this.getMessages();\n  },\n  methods: {\n    sendMessage() {\n      console.log(this.message);\n      push(ref(database, \"message\"), {\n        username: this.username,\n        message: this.message,\n      });\n      document.getElementById(\"box\").value = \"\";\n    },\n    getMessages() {\n      onValue(ref(database, \"message\"), (data) => {\n        this.messages = [];\n        data.forEach((m) => {\n          this.messages.push(m.val());\n          \n        });\n      });\n    },\n  },\n};\n</script>\n<style>\n* {\n  margin: 0;\n  padding: 0;\n}\n.chat-text{\n  over\n}\n.chat-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-content: flex-end;\n  height: 97.7%;\n}\n\n.chat-section {\n  display: flex;\n}\n\n.send-text {\n  height: 2.12rem;\n  width: 5rem;\n  background-color: #5aff8e;\n  border: 1px solid #5aff8e;\n}\n.each-message {\n  border: 1px solid #5aff8e;;\n  height: 2.5rem;\n}\n.message-box {\n  height: 2rem;\n  flex: 1;\n  border: 1px solid #5aff8e;\n  padding-left: 2rem;\n}\n.log-name {\n  align-self: flex-start;\n  justify-self: flex-start;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}